{"ast":null,"code":"import _classCallCheck from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Breadcrumb from \"../common/breadcrumb\";\nimport { getCartTotal } from \"../../services\";\nimport { removeFromCart, incrementQty, decrementQty } from '../../actions';\n\nvar cartComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(cartComponent, _Component);\n\n  function cartComponent(props) {\n    _classCallCheck(this, cartComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(cartComponent).call(this, props));\n  }\n\n  _createClass(cartComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          cartItems = _this$props.cartItems,\n          symbol = _this$props.symbol,\n          total = _this$props.total;\n      return React.createElement(React.Fragment, null) //     <div>\n      //         {/*SEO Support*/}\n      //         {/* <Helmet>\n      //             <title>MultiKart | Cart List Page</title>\n      //             <meta name=\"description\" content=\"Multikart â€“ Multipurpose eCommerce React Template is a multi-use React template. It is designed to go well with multi-purpose websites. Multikart Bootstrap 4 Template will help you run multiple businesses.\" />\n      //         </Helmet> */}\n      //         {/*SEO Support End */}\n      //         <Breadcrumb title={'Cart Page'}/>\n      //         {cartItems.length>0 ?\n      //        <section className=\"cart-section section-b-space\">\n      //        {/* {cartItems.map((item, index) => {\n      //            return( */}\n      //       <div className=\"container\" >\n      //           <div className=\"row\">\n      //               <div className=\"col-sm-12\">\n      //                   <table className=\"table cart-table table-responsive-xs\">\n      //                       <thead>\n      //                       <tr className=\"table-head\">\n      //                           <th scope=\"col\">image</th>\n      //                           <th scope=\"col\">product name</th>\n      //                           <th scope=\"col\">price</th>\n      //                           <th scope=\"col\">quantity</th>\n      //                           <th scope=\"col\">action</th>\n      //                           <th scope=\"col\">total</th>\n      //                       </tr>\n      //                       </thead>\n      //                       {cartItems.map((item, index) => {\n      //                           return (\n      //                           <tbody key={index}>\n      //                               <tr>\n      //                                   <td>\n      //                                       <Link to={`${process.env.PUBLIC_URL}/left-sidebar/product/${item.id}`}>\n      //                                           <img src={item.variants?\n      //                                                     item.variants[0].images\n      //                                                     :item.media.source} alt=\"\" />\n      //                                       </Link>\n      //                                   </td>\n      //                                   <td><Link to={`${process.env.PUBLIC_URL}/left-sidebar/product/${item.id}`}>{item.name}</Link>\n      //                                       <div className=\"mobile-cart-content row\">\n      //                                           <div className=\"col-xs-3\">\n      //                                               <div className=\"qty-box\">\n      //                                                   <div className=\"input-group\">\n      //                                                       <input type=\"text\" name=\"quantity\"\n      //                                                              className=\"form-control input-number\" defaultValue={item.qty} />\n      //                                                   </div>\n      //                                               </div>\n      //                                           </div>\n      //                                           <div className=\"col-xs-3\">\n      //                                           <h2 className=\"td-color\">{symbol}{item.discount}</h2>\n      //                                               <h2 className=\"td-color\">{symbol}{item.price-(item.price*item.discount/100)}</h2>\n      //                                           </div>\n      //                                           <div className=\"col-xs-3\">\n      //                                               <h2 className=\"td-color\">\n      //                                                   <a className=\"icon\" onClick={() => this.props.removeFromCart(item)}>\n      //                                                       <i className=\"icon-close\"></i>\n      //                                                   </a>\n      //                                               </h2>\n      //                                           </div>\n      //                                       </div>\n      //                                   </td>\n      //                                   <td><h2>{item.price.formatted_with_symbol}</h2></td>\n      //                                   <td>\n      //                                       <div className=\"qty-box\">\n      //                                           <div className=\"input-group\">\n      //                                               <span className=\"input-group-prepend\">\n      //                                                   <button type=\"button\" className=\"btn quantity-left-minus\" onClick={() => this.props.decrementQty(item.id)} data-type=\"minus\" data-field=\"\">\n      //                                                    <i className=\"fa fa-angle-left\"></i>\n      //                                                   </button>\n      //                                               </span>\n      //                                               <input type=\"text\" name=\"quantity\" value={item.qty} readOnly={true} className=\"form-control input-number\" />\n      //                                               <span className=\"input-group-prepend\">\n      //                                               <button className=\"btn quantity-right-plus\" onClick={() => this.props.incrementQty(item, 1)}  data-type=\"plus\" disabled={(item.qty >= item.stock)? true : false}>\n      //                                               <i className=\"fa fa-angle-right\"></i>\n      //                                               </button>\n      //                                              </span>\n      //                                           </div>\n      //                                       </div>{(item.qty >= item.stock)? 'out of Stock' : ''}\n      //                                   </td>\n      //                                   <td>\n      //                                       <a href=\"#\" className=\"icon\" onClick={() => this.props.removeFromCart(item)}>\n      //                                           <i className=\"fa fa-times\"></i>\n      //                                       </a>\n      //                                   </td>                                               \n      //                                   <td>\n      //                                   <h2 className=\"td-color\">{symbol} {item.qty * item.price.formatted}</h2>\n      //                                       {/* <h2 className=\"td-color\">{symbol}{(item.qty) * (item.price.formattted)}</h2> */}\n      //                                       </td>\n      //                               </tr>\n      //                           </tbody> )\n      //                       })}\n      //                   </table>\n      //                   <table className=\"table cart-table table-responsive-md\">\n      //                       <tfoot>\n      //                       <tr>\n      //                           <td>total price :</td>\n      //                             <td><h2>{symbol}  {cartItems\n      // .map((item) => item.qty * item.price.formatted)\n      // .reduce((acc, current) => {\n      //  return acc + current;\n      // }, 0)}</h2></td>\n      //                       </tr>\n      //                       </tfoot>\n      //                   </table>\n      //               </div>\n      //           </div>\n      //           <div className=\"row cart-buttons\">\n      //               <div className=\"col-6\">\n      //                   <Link to={`${process.env.PUBLIC_URL}/#`} className=\"btn btn-solid\">continue shopping</Link>\n      //               </div>\n      //               <div className=\"col-6\">\n      //                   <Link to={`${process.env.PUBLIC_URL}/checkout`} className=\"btn btn-solid\">check out</Link>\n      //               </div>\n      //           </div>\n      //       </div>\n      //            {/* )})} */}\n      //   </section>\n      //         :\n      //         <section className=\"cart-section section-b-space\">\n      //             <div className=\"container\">\n      //                 <div className=\"row\">\n      //                     <div className=\"col-sm-12\">\n      //                         <div >\n      //                             <div className=\"col-sm-12 empty-cart-cls text-center\">\n      //                                 <img src={`${process.env.PUBLIC_URL}/assets/images/icon-empty-cart.png`} className=\"img-fluid mb-4\" alt=\"\" />\n      //                                 <h3>\n      //                                     <strong>Your Cart is Empty</strong>\n      //                                 </h3>\n      //                                 <h4>Explore more shortlist some items.</h4>\n      //                             </div>\n      //                         </div>\n      //                     </div>\n      //                 </div>\n      //             </div>\n      //         </section>\n      //         }\n      //     </div>\n      ;\n    }\n  }]);\n\n  return cartComponent;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartItems: state.cartList.cart,\n    symbol: state.data.symbol,\n    total: getCartTotal(state.cartList.cart)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeFromCart: removeFromCart,\n  incrementQty: incrementQty,\n  decrementQty: decrementQty\n})(cartComponent);","map":{"version":3,"sources":["F:\\Philip\\Rezingo\\08-06-22\\front-end\\src\\components\\cart\\index.jsx"],"names":["React","Component","Helmet","connect","Link","Breadcrumb","getCartTotal","removeFromCart","incrementQty","decrementQty","cartComponent","props","cartItems","symbol","total","mapStateToProps","state","cartList","cart","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,cAAR,EAAwBC,YAAxB,EAAsCC,YAAtC,QAAyD,eAAzD;;IAEMC,a;;;;;AAEF,yBAAaC,KAAb,EAAoB;AAAA;;AAAA,sFACTA,KADS;AAEnB;;;;6BAEQ;AAAA,wBAE8B,KAAKA,KAFnC;AAAA,UAEEC,SAFF,eAEEA,SAFF;AAAA,UAEaC,MAFb,eAEaA,MAFb;AAAA,UAEqBC,KAFrB,eAEqBA,KAFrB;AAGL,aACI,yxJuBb,S;;AA0J5B,IAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCJ,IAAAA,SAAS,EAAEI,KAAK,CAACC,QAAN,CAAeC,IADM;AAEhCL,IAAAA,MAAM,EAAEG,KAAK,CAACG,IAAN,CAAWN,MAFa;AAGhCC,IAAAA,KAAK,EAAER,YAAY,CAACU,KAAK,CAACC,QAAN,CAAeC,IAAhB;AAHa,GAAZ;AAAA,CAAxB;;AAMA,eAAef,OAAO,CAClBY,eADkB,EAElB;AAACR,EAAAA,cAAc,EAAdA,cAAD;AAAiBC,EAAAA,YAAY,EAAZA,YAAjB;AAA+BC,EAAAA,YAAY,EAAZA;AAA/B,CAFkB,CAAP,CAGbC,aAHa,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Helmet} from 'react-helmet'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Breadcrumb from \"../common/breadcrumb\";\r\nimport {getCartTotal} from \"../../services\";\r\nimport {removeFromCart, incrementQty, decrementQty} from '../../actions'\r\n\r\nclass cartComponent extends Component {\r\n\r\n    constructor (props) {\r\n        super (props)\r\n    }\r\n\r\n    render (){\r\n\r\n        const {cartItems, symbol, total} = this.props;\r\n        return (\r\n            <></>\r\n        //     <div>\r\n        //         {/*SEO Support*/}\r\n        //         {/* <Helmet>\r\n        //             <title>MultiKart | Cart List Page</title>\r\n        //             <meta name=\"description\" content=\"Multikart â€“ Multipurpose eCommerce React Template is a multi-use React template. It is designed to go well with multi-purpose websites. Multikart Bootstrap 4 Template will help you run multiple businesses.\" />\r\n        //         </Helmet> */}\r\n        //         {/*SEO Support End */}\r\n\r\n        //         <Breadcrumb title={'Cart Page'}/>\r\n\r\n        //         {cartItems.length>0 ?\r\n        //        <section className=\"cart-section section-b-space\">\r\n        //        {/* {cartItems.map((item, index) => {\r\n        //            return( */}\r\n        //       <div className=\"container\" >\r\n        //           <div className=\"row\">\r\n        //               <div className=\"col-sm-12\">\r\n        //                   <table className=\"table cart-table table-responsive-xs\">\r\n        //                       <thead>\r\n        //                       <tr className=\"table-head\">\r\n        //                           <th scope=\"col\">image</th>\r\n        //                           <th scope=\"col\">product name</th>\r\n        //                           <th scope=\"col\">price</th>\r\n        //                           <th scope=\"col\">quantity</th>\r\n        //                           <th scope=\"col\">action</th>\r\n        //                           <th scope=\"col\">total</th>\r\n        //                       </tr>\r\n        //                       </thead>\r\n        //                       {cartItems.map((item, index) => {\r\n        //                           return (\r\n        //                           <tbody key={index}>\r\n        //                               <tr>\r\n        //                                   <td>\r\n        //                                       <Link to={`${process.env.PUBLIC_URL}/left-sidebar/product/${item.id}`}>\r\n        //                                           <img src={item.variants?\r\n        //                                                     item.variants[0].images\r\n        //                                                     :item.media.source} alt=\"\" />\r\n        //                                       </Link>\r\n        //                                   </td>\r\n        //                                   <td><Link to={`${process.env.PUBLIC_URL}/left-sidebar/product/${item.id}`}>{item.name}</Link>\r\n        //                                       <div className=\"mobile-cart-content row\">\r\n        //                                           <div className=\"col-xs-3\">\r\n        //                                               <div className=\"qty-box\">\r\n        //                                                   <div className=\"input-group\">\r\n        //                                                       <input type=\"text\" name=\"quantity\"\r\n        //                                                              className=\"form-control input-number\" defaultValue={item.qty} />\r\n        //                                                   </div>\r\n        //                                               </div>\r\n        //                                           </div>\r\n        //                                           <div className=\"col-xs-3\">\r\n        //                                           <h2 className=\"td-color\">{symbol}{item.discount}</h2>\r\n        //                                               <h2 className=\"td-color\">{symbol}{item.price-(item.price*item.discount/100)}</h2>\r\n        //                                           </div>\r\n        //                                           <div className=\"col-xs-3\">\r\n        //                                               <h2 className=\"td-color\">\r\n        //                                                   <a className=\"icon\" onClick={() => this.props.removeFromCart(item)}>\r\n        //                                                       <i className=\"icon-close\"></i>\r\n        //                                                   </a>\r\n        //                                               </h2>\r\n        //                                           </div>\r\n        //                                       </div>\r\n        //                                   </td>\r\n        //                                   <td><h2>{item.price.formatted_with_symbol}</h2></td>\r\n        //                                   <td>\r\n        //                                       <div className=\"qty-box\">\r\n        //                                           <div className=\"input-group\">\r\n        //                                               <span className=\"input-group-prepend\">\r\n        //                                                   <button type=\"button\" className=\"btn quantity-left-minus\" onClick={() => this.props.decrementQty(item.id)} data-type=\"minus\" data-field=\"\">\r\n        //                                                    <i className=\"fa fa-angle-left\"></i>\r\n        //                                                   </button>\r\n        //                                               </span>\r\n        //                                               <input type=\"text\" name=\"quantity\" value={item.qty} readOnly={true} className=\"form-control input-number\" />\r\n\r\n        //                                               <span className=\"input-group-prepend\">\r\n        //                                               <button className=\"btn quantity-right-plus\" onClick={() => this.props.incrementQty(item, 1)}  data-type=\"plus\" disabled={(item.qty >= item.stock)? true : false}>\r\n        //                                               <i className=\"fa fa-angle-right\"></i>\r\n        //                                               </button>\r\n        //                                              </span>\r\n        //                                           </div>\r\n        //                                       </div>{(item.qty >= item.stock)? 'out of Stock' : ''}\r\n        //                                   </td>\r\n        //                                   <td>\r\n        //                                       <a href=\"#\" className=\"icon\" onClick={() => this.props.removeFromCart(item)}>\r\n        //                                           <i className=\"fa fa-times\"></i>\r\n        //                                       </a>\r\n        //                                   </td>                                               \r\n        //                                   <td>\r\n        //                                   <h2 className=\"td-color\">{symbol} {item.qty * item.price.formatted}</h2>\r\n        //                                       {/* <h2 className=\"td-color\">{symbol}{(item.qty) * (item.price.formattted)}</h2> */}\r\n        //                                       </td>\r\n        //                               </tr>\r\n        //                           </tbody> )\r\n        //                       })}\r\n        //                   </table>\r\n        //                   <table className=\"table cart-table table-responsive-md\">\r\n        //                       <tfoot>\r\n        //                       <tr>\r\n        //                           <td>total price :</td>\r\n                                  \r\n        //                             <td><h2>{symbol}  {cartItems\r\n        // .map((item) => item.qty * item.price.formatted)\r\n        // .reduce((acc, current) => {\r\n        //  return acc + current;\r\n        // }, 0)}</h2></td>\r\n        //                       </tr>\r\n        //                       </tfoot>\r\n        //                   </table>\r\n        //               </div>\r\n        //           </div>\r\n        //           <div className=\"row cart-buttons\">\r\n        //               <div className=\"col-6\">\r\n        //                   <Link to={`${process.env.PUBLIC_URL}/#`} className=\"btn btn-solid\">continue shopping</Link>\r\n        //               </div>\r\n        //               <div className=\"col-6\">\r\n        //                   <Link to={`${process.env.PUBLIC_URL}/checkout`} className=\"btn btn-solid\">check out</Link>\r\n        //               </div>\r\n        //           </div>\r\n        //       </div>\r\n        //            {/* )})} */}\r\n        //   </section>\r\n        //         :\r\n        //         <section className=\"cart-section section-b-space\">\r\n        //             <div className=\"container\">\r\n        //                 <div className=\"row\">\r\n        //                     <div className=\"col-sm-12\">\r\n        //                         <div >\r\n        //                             <div className=\"col-sm-12 empty-cart-cls text-center\">\r\n        //                                 <img src={`${process.env.PUBLIC_URL}/assets/images/icon-empty-cart.png`} className=\"img-fluid mb-4\" alt=\"\" />\r\n        //                                 <h3>\r\n        //                                     <strong>Your Cart is Empty</strong>\r\n        //                                 </h3>\r\n        //                                 <h4>Explore more shortlist some items.</h4>\r\n        //                             </div>\r\n        //                         </div>\r\n        //                     </div>\r\n        //                 </div>\r\n        //             </div>\r\n        //         </section>\r\n        //         }\r\n        //     </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    cartItems: state.cartList.cart,\r\n    symbol: state.data.symbol,\r\n    total: getCartTotal(state.cartList.cart)\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {removeFromCart, incrementQty, decrementQty}\r\n)(cartComponent)"]},"metadata":{},"sourceType":"module"}