{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n */\nvar StringUtils =\n/** @class */\nfunction () {\n  function StringUtils() {}\n  /**\n   * Check if a string is empty\n   *\n   * @param str\n   */\n\n\n  StringUtils.isEmpty = function (str) {\n    return typeof str === \"undefined\" || !str || 0 === str.length;\n  };\n  /**\n   * Check if a string's value is a valid JSON object\n   *\n   * @param str\n   */\n\n\n  StringUtils.validateAndParseJsonCacheKey = function (str) {\n    try {\n      var parsedKey = JSON.parse(str);\n      /**\n       * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n       * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n       * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n       *\n       */\n\n      return parsedKey && typeof parsedKey === \"object\" ? parsedKey : null;\n    } catch (error) {\n      return null;\n    }\n  };\n\n  return StringUtils;\n}();\n\nexport { StringUtils };","map":null,"metadata":{},"sourceType":"module"}