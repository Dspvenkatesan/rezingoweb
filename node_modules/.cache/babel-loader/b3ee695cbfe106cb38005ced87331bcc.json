{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Philip\\\\Rezingo\\\\08-06-22\\\\front-end\\\\src\\\\components\\\\common\\\\headers\\\\common\\\\auth-provider.js\";\nimport React, { Component } from 'react';\nimport { msalApp, requiresInteraction, isIE, AUTH_REQUESTS, AUTH_SCOPES } from './auth-utils';\nimport { AuthContext } from './auth-context'; // If you support IE, our recommendation is that you sign-in using Redirect APIs\n\nvar useRedirectFlow = isIE(); // const useRedirectFlow = true;\n\nexport default (function (C) {\n  return (\n    /*#__PURE__*/\n    function (_Component) {\n      _inherits(AuthProvider, _Component);\n\n      function AuthProvider(props) {\n        var _this;\n\n        _classCallCheck(this, AuthProvider);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AuthProvider).call(this, props));\n        _this.state = {\n          account: null,\n          isAuthenticated: false,\n          error: null\n        };\n        return _this;\n      }\n\n      _createClass(AuthProvider, [{\n        key: \"acquireToken\",\n        value: function () {\n          var _acquireToken = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(request, redirect) {\n            var _this2 = this;\n\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    return _context.abrupt(\"return\", msalApp.acquireTokenSilent(request).then(function (loginResponse) {\n                      if (loginResponse) {\n                        _this2.setState({\n                          account: loginResponse.account,\n                          isAuthenticated: true,\n                          error: null\n                        });\n\n                        return true;\n                      }\n                    }).catch(function (error) {\n                      // Call acquireTokenPopup (popup window) in case of acquireTokenSilent failure\n                      // due to consent or interaction required ONLY\n                      if (requiresInteraction(error.errorCode)) {\n                        _this2.setState({\n                          isAuthenticated: false\n                        });\n\n                        return redirect ? msalApp.acquireTokenRedirect(request) : _this2.onSignIn(redirect);\n                      }\n\n                      console.error('Non-interactive error:', error.errorCode);\n                      return false;\n                    }));\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          return function acquireToken(_x, _x2) {\n            return _acquireToken.apply(this, arguments);\n          };\n        }()\n      }, {\n        key: \"onSignIn\",\n        value: function () {\n          var _onSignIn = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(redirect) {\n            var loginResponse;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (!redirect) {\n                      _context2.next = 2;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\", msalApp.loginRedirect({\n                      scopes: [AUTH_SCOPES.OPENID, AUTH_SCOPES.PROFILE],\n                      extraQueryParameters: {\n                        ui_locales: localStorage.getItem('language')\n                      }\n                    }));\n\n                  case 2:\n                    _context2.next = 4;\n                    return msalApp.loginRedirect({\n                      scopes: [AUTH_SCOPES.OPENID, AUTH_SCOPES.PROFILE],\n                      extraQueryParameters: {\n                        ui_locales: localStorage.getItem('language')\n                      }\n                    });\n\n                  case 4:\n                    loginResponse = _context2.sent;\n\n                    if (loginResponse) {\n                      this.setState({\n                        account: loginResponse.account,\n                        isAuthenticated: true,\n                        error: null\n                      });\n                    }\n\n                  case 6:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n\n          return function onSignIn(_x3) {\n            return _onSignIn.apply(this, arguments);\n          };\n        }()\n      }, {\n        key: \"onSignOut\",\n        value: function onSignOut() {\n          msalApp.logout();\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function () {\n          var _componentDidMount = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee3() {\n            var _this3 = this;\n\n            var account, now;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    msalApp.handleRedirectCallback(function (error) {\n                      if (error) {\n                        var errorMessage = error.errorMessage ? error.errorMessage : 'Unable to acquire access token.';\n\n                        _this3.setState({\n                          error: errorMessage\n                        });\n                      }\n                    });\n                    account = msalApp.getAccount();\n                    this.setState({\n                      account: account\n                    });\n                    now = Math.round(new Date().getTime() / 1000);\n\n                    if (account) {\n                      if (account.idToken.exp > now) {\n                        this.setState({\n                          isAuthenticated: true\n                        });\n                      } else {\n                        this.acquireToken(AUTH_REQUESTS.REFRESH_TOKEN, useRedirectFlow);\n                      }\n                    }\n\n                  case 5:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, this);\n          }));\n\n          return function componentDidMount() {\n            return _componentDidMount.apply(this, arguments);\n          };\n        }()\n      }, {\n        key: \"CheckIsAuthenticated\",\n        value: function () {\n          var _CheckIsAuthenticated = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee4() {\n            var account, now;\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    account = msalApp.getAccount();\n                    this.setState({\n                      account: account\n                    });\n                    now = Math.round(new Date().getTime() / 1000);\n\n                    if (!account) {\n                      _context4.next = 8;\n                      break;\n                    }\n\n                    if (!(account.idToken.exp > now)) {\n                      _context4.next = 7;\n                      break;\n                    }\n\n                    this.setState({\n                      isAuthenticated: true\n                    });\n                    return _context4.abrupt(\"return\", true);\n\n                  case 7:\n                    return _context4.abrupt(\"return\", this.acquireToken(AUTH_REQUESTS.REFRESH_TOKEN, useRedirectFlow));\n\n                  case 8:\n                    return _context4.abrupt(\"return\", false);\n\n                  case 9:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, this);\n          }));\n\n          return function CheckIsAuthenticated() {\n            return _CheckIsAuthenticated.apply(this, arguments);\n          };\n        }()\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this4 = this;\n\n          var authContext = {\n            isAuthenticated: this.state.isAuthenticated,\n            CheckIsAuthenticated: function CheckIsAuthenticated() {\n              return _this4.CheckIsAuthenticated();\n            },\n            account: this.state.account,\n            error: this.state.error,\n            onSignIn: function onSignIn() {\n              return _this4.onSignIn(useRedirectFlow);\n            },\n            onSignOut: function onSignOut() {\n              return _this4.onSignOut();\n            }\n          };\n          return React.createElement(AuthContext.Provider, {\n            value: authContext,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }, React.createElement(C, Object.assign({}, this.props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          })));\n        }\n      }]);\n\n      return AuthProvider;\n    }(Component)\n  );\n});","map":{"version":3,"sources":["F:\\Philip\\Rezingo\\08-06-22\\front-end\\src\\components\\common\\headers\\common\\auth-provider.js"],"names":["React","Component","msalApp","requiresInteraction","isIE","AUTH_REQUESTS","AUTH_SCOPES","AuthContext","useRedirectFlow","C","props","state","account","isAuthenticated","error","request","redirect","acquireTokenSilent","then","loginResponse","setState","catch","errorCode","acquireTokenRedirect","onSignIn","console","loginRedirect","scopes","OPENID","PROFILE","extraQueryParameters","ui_locales","localStorage","getItem","logout","handleRedirectCallback","errorMessage","getAccount","now","Math","round","Date","getTime","idToken","exp","acquireToken","REFRESH_TOKEN","authContext","CheckIsAuthenticated","onSignOut"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  msalApp,\r\n  requiresInteraction,\r\n  isIE,\r\n  AUTH_REQUESTS,\r\n  AUTH_SCOPES,\r\n} from './auth-utils';\r\nimport { AuthContext } from './auth-context';\r\n\r\n// If you support IE, our recommendation is that you sign-in using Redirect APIs\r\nconst useRedirectFlow = isIE();\r\n// const useRedirectFlow = true;\r\n\r\nexport default (C) =>\r\n  class AuthProvider extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        account: null,\r\n        isAuthenticated: false,\r\n        error: null,\r\n      };\r\n    }\r\n\r\n    async acquireToken(request, redirect) {\r\n      return msalApp\r\n        .acquireTokenSilent(request)\r\n        .then((loginResponse) => {\r\n          if (loginResponse) {\r\n            this.setState({\r\n              account: loginResponse.account,\r\n              isAuthenticated: true,\r\n              error: null,\r\n            });\r\n            return true;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          // Call acquireTokenPopup (popup window) in case of acquireTokenSilent failure\r\n          // due to consent or interaction required ONLY\r\n          if (requiresInteraction(error.errorCode)) {\r\n            this.setState({\r\n              isAuthenticated: false,\r\n            });\r\n            return redirect ? msalApp.acquireTokenRedirect(request) : this.onSignIn(redirect);\r\n          }\r\n          console.error('Non-interactive error:', error.errorCode);\r\n          return false;\r\n        });\r\n    }\r\n\r\n    async onSignIn(redirect) {\r\n      if (redirect) {\r\n        return msalApp.loginRedirect({\r\n          scopes: [AUTH_SCOPES.OPENID, AUTH_SCOPES.PROFILE],\r\n          extraQueryParameters: {\r\n            ui_locales: localStorage.getItem('language')  ,\r\n          },\r\n        });\r\n      }\r\n\r\n      const loginResponse = await msalApp.loginRedirect({\r\n        scopes: [AUTH_SCOPES.OPENID, AUTH_SCOPES.PROFILE],\r\n        extraQueryParameters: {\r\n          ui_locales: localStorage.getItem('language') ,\r\n        },\r\n      });\r\n\r\n      if (loginResponse) {\r\n        this.setState({\r\n          account: loginResponse.account,\r\n          isAuthenticated: true,\r\n          error: null,\r\n        });\r\n      }\r\n    }\r\n\r\n    onSignOut() {\r\n      msalApp.logout();\r\n    }\r\n\r\n    async componentDidMount() {\r\n      msalApp.handleRedirectCallback((error) => {\r\n        if (error) {\r\n          const errorMessage = error.errorMessage ? error.errorMessage : 'Unable to acquire access token.';\r\n          this.setState({\r\n            error: errorMessage,\r\n          });\r\n        }\r\n      });\r\n\r\n      const account = msalApp.getAccount();\r\n      this.setState({\r\n        account,\r\n      });\r\n\r\n      const now = Math.round(new Date().getTime() / 1000);\r\n\r\n      if (account) {\r\n        if (account.idToken.exp > now) {\r\n          this.setState({\r\n            isAuthenticated: true,\r\n          });\r\n        } else {\r\n          this.acquireToken(AUTH_REQUESTS.REFRESH_TOKEN, useRedirectFlow);\r\n        }\r\n      }\r\n    }\r\n\r\n    async CheckIsAuthenticated() {\r\n      const account = msalApp.getAccount();\r\n      this.setState({\r\n        account,\r\n      });\r\n\r\n      const now = Math.round(new Date().getTime() / 1000);\r\n\r\n      if (account) {\r\n        if (account.idToken.exp > now) {\r\n          this.setState({\r\n            isAuthenticated: true,\r\n          });\r\n          return true;\r\n        }\r\n        return this.acquireToken(AUTH_REQUESTS.REFRESH_TOKEN, useRedirectFlow);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    render() {\r\n      const authContext = {\r\n        isAuthenticated: this.state.isAuthenticated,\r\n        CheckIsAuthenticated: () => this.CheckIsAuthenticated(),\r\n        account: this.state.account,\r\n        error: this.state.error,\r\n        onSignIn: () => this.onSignIn(useRedirectFlow),\r\n        onSignOut: () => this.onSignOut(),\r\n      };\r\n\r\n      return (\r\n        <AuthContext.Provider value={authContext}>\r\n          <C {...this.props} />\r\n        </AuthContext.Provider>\r\n      );\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}